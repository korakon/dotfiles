#!/bin/bash


#
# args passed to ln
#

LN_ARGS="-sf"

#
# current script dir
#

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

#
# Link dotfiles to their dirs
#

#
# make a hash of dotfile->destination
#

typeset -A des

# Bash
des[bash/bashrc]="$HOME/.bashrc"

# i3
des[i3/config]="$HOME/.i3/config"

# Vim
des[vim/vimrc]="$HOME/.vimrc"

# X
des[x/Xresources]="$HOME/.Xresources"
des[x/xinitrc]="$HOME/.xinitrc"

# zsh & oh-my-zsh
des[zsh/zshrc]="$HOME/.zshrc"
des[zsh/custom/*]="$HOME/.oh-my-zsh/custom/"
des[zsh/themes/*]="$HOME/.oh-my-zsh/custom/themes"

# emacs
des[emacs/init.el]="$HOME/.emacs.d/init.el"
des[bin/e]="$HOME/bin/e"

# nowdo
des[bin/nowdo]="$HOME/bin/nowdo"

# timer
des[bin/timer]="$HOME/bin/timer"
des[bin/webcam]="$HOME/bin/webcam"

# blabla
des[bin/blabla]="$HOME/bin/blabla"

# docker
des[docker/docker-clean]="$HOME/bin/docker-clean"

# mpv
des[mpv/mpv.conf]="$HOME/.config/mpv/mpv.conf"
mkdir -p "dirname ${des[mpv/mpv.conf]}"

# racket
des[racket/racketrc]="$HOME/.racketrc"

# cabal
des[cabal/config]="$HOME/.cabal/config"

# npm
des[npm/npmrc]="$HOME/.npmrc"


help() {
    echo "
        install [install | uninstall]
        install -> Install the dotfiles
        uninstall -> Removes them
    "
}

install() {

    for i in "${!des[@]}"
    do
      # script file
      f="$DIR/$i"

      # Make the script executable
      chmod +x $f

      destination="${des[$i]}"
      printf "%-25s -> %s\n" $i $destination

      ln $LN_ARGS $f "$destination" || {
        echo FAILED TO LINK $f
        exit
      }
    done

}


install;
